import { Builder, By, until, WebDriver } from 'selenium-webdriver';
import { Options } from 'selenium-webdriver/chrome';

/**
 * –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Selenium WebDriver
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
 */
class SeleniumBasicExample {
  private driver: WebDriver | null;

  constructor() {
    this.driver = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome
   */
  async initializeDriver(): Promise<void> {
    try {
      const chromeOptions = new Options();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      chromeOptions.addArguments('--no-sandbox');
      chromeOptions.addArguments('--disable-dev-shm-usage');
      chromeOptions.addArguments('--disable-gpu');
      
      this.driver = await new Builder()
        .forBrowser('chrome')
        .setChromeOptions(chromeOptions)
        .build();

      console.log('‚úÖ –î—Ä–∞–π–≤–µ—Ä Chrome —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –û—Ç–∫—Ä—ã—Ç–∏–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  async openPage(url: string): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      await this.driver.get(url);
      console.log(`‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ ${url} —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞`);
      
      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      await this.driver.wait(until.titleContains(''), 10000);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
   */
  async findElement(selector: string, timeout: number = 5000): Promise<any> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      const element = await this.driver.wait(
        until.elementLocated(By.css(selector)),
        timeout
      );
      console.log(`‚úÖ –≠–ª–µ–º–µ–Ω—Ç ${selector} –Ω–∞–π–¥–µ–Ω`);
      return element;
    } catch (error) {
      console.error(`‚ùå –≠–ª–µ–º–µ–Ω—Ç ${selector} –Ω–µ –Ω–∞–π–¥–µ–Ω:`, error);
      throw error;
    }
  }

  /**
   * –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
   */
  async clickElement(selector: string): Promise<void> {
    try {
      const element = await this.findElement(selector);
      await element.click();
      console.log(`‚úÖ –ö–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É ${selector} –≤—ã–ø–æ–ª–Ω–µ–Ω`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É ${selector}:`, error);
      throw error;
    }
  }

  /**
   * –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ
   */
  async typeText(selector: string, text: string): Promise<void> {
    try {
      const element = await this.findElement(selector);
      await element.clear();
      await element.sendKeys(text);
      console.log(`‚úÖ –¢–µ–∫—Å—Ç "${text}" –≤–≤–µ–¥–µ–Ω –≤ –ø–æ–ª–µ ${selector}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –ø–æ–ª–µ ${selector}:`, error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
   */
  async getElementText(selector: string): Promise<string> {
    try {
      const element = await this.findElement(selector);
      const text = await element.getText();
      console.log(`‚úÖ –¢–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ ${selector}: "${text}"`);
      return text;
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ ${selector}:`, error);
      throw error;
    }
  }

  /**
   * –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  async takeScreenshot(filename: string): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      const screenshot = await this.driver.takeScreenshot();
      const fs = require('fs');
      fs.writeFileSync(filename, screenshot, 'base64');
      console.log(`‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª ${filename}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
   */
  async getPageInfo(): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      const title = await this.driver.getTitle();
      const url = await this.driver.getCurrentUrl();
      
      console.log('üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:');
      console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
      console.log(`   URL: ${url}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', error);
      throw error;
    }
  }

  /**
   * –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  async waitForPageLoad(): Promise<void> {
    try {
      if (!this.driver) return;
      
      await this.driver.wait(
        async () => {
          const readyState = await this.driver!.executeScript('return document.readyState');
          return readyState === 'complete';
        },
        10000
      );
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
      throw error;
    }
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  async closeBrowser(): Promise<void> {
    try {
      if (this.driver) {
        await this.driver.quit();
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
   */
  async run(): Promise<void> {
    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ Selenium...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
      await this.initializeDriver();
      
      // –û—Ç–∫—Ä—ã—Ç–∏–µ Google
      await this.openPage('https://www.google.com');
      await this.waitForPageLoad();
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      await this.getPageInfo();
      
      // –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
      await this.typeText('input[name="q"]', 'Selenium WebDriver');
      
      // –û–∂–∏–¥–∞–Ω–∏–µ –∏ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞
      await this.clickElement('input[name="btnK"]');
      
      // –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
      if (this.driver) {
        await this.driver.wait(until.elementLocated(By.id('search')), 5000);
      }
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      await this.getElementText('#search h3');
      
      // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
      await this.takeScreenshot('google-search-results.png');
      
      console.log('‚úÖ –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä Selenium —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞:', error);
    } finally {
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
      await this.closeBrowser();
    }
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (require.main === module) {
  const example = new SeleniumBasicExample();
  example.run().catch(console.error);
}

export default SeleniumBasicExample;