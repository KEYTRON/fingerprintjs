import { Builder, By, until, WebDriver } from 'selenium-webdriver';
import { Options } from 'selenium-webdriver/chrome';

/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Selenium WebDriver
 * –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ HTML —Ñ–∞–π–ª–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */
class SeleniumSimpleExample {
  private driver: WebDriver | null;

  constructor() {
    this.driver = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome
   */
  async initializeDriver(): Promise<void> {
    try {
      const chromeOptions = new Options();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      chromeOptions.addArguments('--no-sandbox');
      chromeOptions.addArguments('--disable-dev-shm-usage');
      chromeOptions.addArguments('--disable-gpu');
      chromeOptions.addArguments('--disable-extensions');
      chromeOptions.addArguments('--disable-plugins');
      
      this.driver = await new Builder()
        .forBrowser('chrome')
        .setChromeOptions(chromeOptions)
        .build();

      console.log('‚úÖ –î—Ä–∞–π–≤–µ—Ä Chrome —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
   */
  async createTestPage(): Promise<string> {
    const html = `
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Selenium Test Page</title>
          <style>
              body { 
                  font-family: Arial, sans-serif; 
                  margin: 40px; 
                  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                  color: white;
                  min-height: 100vh;
              }
              .container { 
                  max-width: 800px; 
                  margin: 0 auto; 
                  background: rgba(255, 255, 255, 0.1);
                  padding: 30px;
                  border-radius: 15px;
                  backdrop-filter: blur(10px);
              }
              .form-group { 
                  margin: 20px 0; 
              }
              label { 
                  display: block; 
                  margin-bottom: 5px; 
                  font-weight: bold;
              }
              input, textarea, select { 
                  width: 100%; 
                  padding: 10px; 
                  border: none; 
                  border-radius: 5px; 
                  font-size: 16px;
                  background: rgba(255, 255, 255, 0.9);
                  color: #333;
              }
              button { 
                  background: #4CAF50; 
                  color: white; 
                  padding: 12px 24px; 
                  border: none; 
                  border-radius: 5px; 
                  cursor: pointer; 
                  font-size: 16px;
                  margin: 10px 5px;
                  transition: background 0.3s;
              }
              button:hover { 
                  background: #45a049; 
              }
              .result { 
                  background: rgba(255, 255, 255, 0.2); 
                  padding: 20px; 
                  margin: 20px 0; 
                  border-radius: 10px; 
                  border-left: 4px solid #4CAF50;
              }
              .hidden { 
                  display: none; 
              }
              .success { 
                  color: #4CAF50; 
                  font-weight: bold; 
              }
              .error { 
                  color: #f44336; 
                  font-weight: bold; 
              }
          </style>
      </head>
      <body>
          <div class="container">
              <h1>üß™ Selenium Test Page</h1>
              <p>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Selenium WebDriver.</p>
              
              <div class="form-group">
                  <label for="name">–ò–º—è:</label>
                  <input type="text" id="name" name="name" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è">
              </div>
              
              <div class="form-group">
                  <label for="email">Email:</label>
                  <input type="email" id="email" name="email" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email">
              </div>
              
              <div class="form-group">
                  <label for="message">–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
                  <textarea id="message" name="message" rows="4" placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"></textarea>
              </div>
              
              <div class="form-group">
                  <label for="country">–°—Ç—Ä–∞–Ω–∞:</label>
                  <select id="country" name="country">
                      <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É</option>
                      <option value="russia">–†–æ—Å—Å–∏—è</option>
                      <option value="usa">–°–®–ê</option>
                      <option value="germany">–ì–µ—Ä–º–∞–Ω–∏—è</option>
                      <option value="france">–§—Ä–∞–Ω—Ü–∏—è</option>
                      <option value="japan">–Ø–ø–æ–Ω–∏—è</option>
                  </select>
              </div>
              
              <div class="form-group">
                  <button id="submitBtn" onclick="submitForm()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
                  <button id="clearBtn" onclick="clearForm()">–û—á–∏—Å—Ç–∏—Ç—å</button>
                  <button id="showInfoBtn" onclick="showBrowserInfo()">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ</button>
              </div>
              
              <div id="result" class="result hidden"></div>
              
              <div id="browserInfo" class="result hidden"></div>
          </div>
          
          <script>
              function submitForm() {
                  const name = document.getElementById('name').value;
                  const email = document.getElementById('email').value;
                  const message = document.getElementById('message').value;
                  const country = document.getElementById('country').value;
                  
                  if (!name || !email || !message || !country) {
                      showResult('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', 'error');
                      return;
                  }
                  
                  const result = \`–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\\n\\n–ò–º—è: \${name}\\nEmail: \${email}\\n–°—Ç—Ä–∞–Ω–∞: \${country}\\n–°–æ–æ–±—â–µ–Ω–∏–µ: \${message}\`;
                  showResult(result, 'success');
              }
              
              function clearForm() {
                  document.getElementById('name').value = '';
                  document.getElementById('email').value = '';
                  document.getElementById('message').value = '';
                  document.getElementById('country').value = '';
                  document.getElementById('result').classList.add('hidden');
                  document.getElementById('browserInfo').classList.add('hidden');
              }
              
              function showBrowserInfo() {
                  const info = {
                      userAgent: navigator.userAgent,
                      language: navigator.language,
                      platform: navigator.platform,
                      cookieEnabled: navigator.cookieEnabled,
                      onLine: navigator.onLine,
                      screen: {
                          width: screen.width,
                          height: screen.height,
                          availWidth: screen.availWidth,
                          availHeight: screen.availHeight
                      },
                      window: {
                          innerWidth: window.innerWidth,
                          innerHeight: window.innerHeight,
                          outerWidth: window.outerWidth,
                          outerHeight: window.outerHeight
                      },
                      timestamp: new Date().toISOString()
                  };
                  
                  const infoDiv = document.getElementById('browserInfo');
                  infoDiv.innerHTML = \`
                      <h3>üåê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ:</h3>
                      <pre>\${JSON.stringify(info, null, 2)}</pre>
                  \`;
                  infoDiv.classList.remove('hidden');
              }
              
              function showResult(message, type) {
                  const resultDiv = document.getElementById('result');
                  resultDiv.innerHTML = \`<span class="\${type}">\${message}</span>\`;
                  resultDiv.classList.remove('hidden');
              }
              
              // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
              window.addEventListener('load', function() {
                  setTimeout(() => {
                      document.getElementById('name').value = '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤';
                      document.getElementById('email').value = 'ivan@example.com';
                      document.getElementById('message').value = '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Selenium!';
                      document.getElementById('country').value = 'russia';
                  }, 1000);
              });
          </script>
      </body>
      </html>
    `;

    const fs = require('fs');
    const path = require('path');
    const filePath = path.join(__dirname, 'selenium-test.html');
    fs.writeFileSync(filePath, html);
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞:', filePath);
    return filePath;
  }

  /**
   * –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   */
  async openTestPage(filePath: string): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      const fileUrl = `file://${filePath}`;
      await this.driver.get(fileUrl);
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞');
      
      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      await this.driver.wait(until.titleContains('Selenium Test Page'), 10000);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
      throw error;
    }
  }

  /**
   * –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
   */
  async fillForm(): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      console.log('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã...');
      
      // –û—á–∏—Å—Ç–∫–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π
      await this.driver.findElement(By.id('name')).clear();
      await this.driver.findElement(By.id('name')).sendKeys('–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
      
      await this.driver.findElement(By.id('email')).clear();
      await this.driver.findElement(By.id('email')).sendKeys('test@example.com');
      
      await this.driver.findElement(By.id('message')).clear();
      await this.driver.findElement(By.id('message')).sendKeys('–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Selenium!');
      
      // –í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã
      const countrySelect = await this.driver.findElement(By.id('country'));
      await countrySelect.click();
      await this.driver.findElement(By.css('option[value="germany"]')).click();
      
      console.log('‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã:', error);
      throw error;
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
   */
  async submitForm(): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã...');
      
      // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      await this.driver.findElement(By.id('submitBtn')).click();
      
      // –û–∂–∏–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      await this.driver.wait(until.elementLocated(By.id('result')), 5000);
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      const resultElement = await this.driver.findElement(By.id('result'));
      const resultText = await resultElement.getText();
      
      console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç:', resultText);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ
   */
  async getBrowserInfo(): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      console.log('üåê –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ...');
      
      // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
      await this.driver.findElement(By.id('showInfoBtn')).click();
      
      // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
      await this.driver.wait(until.elementLocated(By.id('browserInfo')), 5000);
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
      const infoElement = await this.driver.findElement(By.id('browserInfo'));
      const infoText = await infoElement.getText();
      
      console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—É—á–µ–Ω–∞');
      console.log(infoText);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ:', error);
      throw error;
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
   */
  async takeScreenshot(filename: string): Promise<void> {
    try {
      if (!this.driver) throw new Error('–î—Ä–∞–π–≤–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      const screenshot = await this.driver.takeScreenshot();
      const fs = require('fs');
      fs.writeFileSync(filename, screenshot, 'base64');
      console.log(`‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª ${filename}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', error);
      throw error;
    }
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  async closeBrowser(): Promise<void> {
    try {
      if (this.driver) {
        await this.driver.quit();
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
   */
  async run(): Promise<void> {
    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ Selenium...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
      await this.initializeDriver();
      
      // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const testPagePath = await this.createTestPage();
      
      // –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      await this.openTestPage(testPagePath);
      
      // –ü–∞—É–∑–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
      await this.fillForm();
      
      // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
      await this.submitForm();
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ
      await this.getBrowserInfo();
      
      // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
      await this.takeScreenshot('selenium-test-results.png');
      
      console.log('‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä Selenium —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞:', error);
    } finally {
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
      await this.closeBrowser();
    }
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (require.main === module) {
  const example = new SeleniumSimpleExample();
  example.run().catch(console.error);
}

export default SeleniumSimpleExample;