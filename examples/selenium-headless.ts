import { Builder, By, until, WebDriver } from 'selenium-webdriver';
import { Options } from 'selenium-webdriver/chrome';
import { ServiceBuilder } from 'selenium-webdriver/chrome';

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Selenium –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –±—Ä–∞—É–∑–µ—Ä–∞ –±–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
 */
class SeleniumHeadlessExample {
  private driver: WebDriver;

  constructor() {
    this.driver = null;
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞ Chrome –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
   */
  async initializeDriver(): Promise<void> {
    try {
      const chromeOptions = new Options();
      
      // –í–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑–≥–æ–ª–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞
      chromeOptions.addArguments('--headless');
      chromeOptions.addArguments('--no-sandbox');
      chromeOptions.addArguments('--disable-dev-shm-usage');
      chromeOptions.addArguments('--disable-gpu');
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã
      chromeOptions.addArguments('--disable-extensions');
      chromeOptions.addArguments('--disable-plugins');
      chromeOptions.addArguments('--disable-images');
      chromeOptions.addArguments('--disable-javascript-harmony-shipping');
      
      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞ (–≤–∞–∂–Ω–æ –¥–ª—è –±–µ–∑–≥–æ–ª–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞)
      chromeOptions.addArguments('--window-size=1920,1080');
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      chromeOptions.addArguments('--disable-web-security');
      chromeOptions.addArguments('--allow-running-insecure-content');
      chromeOptions.addArguments('--disable-features=VizDisplayCompositor');
      
      this.driver = await new Builder()
        .forBrowser('chrome')
        .setChromeOptions(chromeOptions)
        .build();

      console.log('‚úÖ –î—Ä–∞–π–≤–µ—Ä Chrome –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–µ–±-—Å–∞–π—Ç–æ–≤
   */
  async testWebsites(): Promise<void> {
    const websites = [
      { name: 'Google', url: 'https://www.google.com', selector: 'input[name="q"]' },
      { name: 'GitHub', url: 'https://github.com', selector: '.header-search-input' },
      { name: 'Stack Overflow', url: 'https://stackoverflow.com', selector: '.s-input' }
    ];

    for (const site of websites) {
      try {
        console.log(`\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞: ${site.name}`);
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞
        await this.driver.get(site.url);
        await this.driver.wait(until.titleContains(''), 10000);
        
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        const title = await this.driver.getTitle();
        const url = await this.driver.getCurrentUrl();
        
        console.log(`   –ó–∞–≥–æ–ª–æ–≤–æ–∫: ${title}`);
        console.log(`   URL: ${url}`);
        
        // –ü–æ–∏—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        try {
          const element = await this.driver.findElement(By.css(site.selector));
          const isDisplayed = await element.isDisplayed();
          console.log(`   –û—Å–Ω–æ–≤–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω: ${isDisplayed ? '–î–∞' : '–ù–µ—Ç'}`);
        } catch (error) {
          console.log(`   –û—Å–Ω–æ–≤–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${site.selector}`);
        }
        
        // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        const screenshotName = `${site.name.toLowerCase()}-screenshot.png`;
        await this.takeScreenshot(screenshotName);
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Å–∞–π—Ç–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000));
        
      } catch (error) {
        console.error(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ${site.name}:`, error.message);
      }
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
   */
  async testPerformance(): Promise<void> {
    try {
      console.log('\n‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
      
      const startTime = Date.now();
      
      // –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∫–ª–∞–¥–æ–∫
      for (let i = 0; i < 3; i++) {
        await this.driver.executeScript(`window.open('https://www.google.com', '_blank');`);
        await new Promise(resolve => setTimeout(resolve, 1000));
      }
      
      // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏
      const handles = await this.driver.getAllWindowHandles();
      for (const handle of handles) {
        await this.driver.switchTo().window(handle);
        const title = await this.driver.getTitle();
        console.log(`   –í–∫–ª–∞–¥–∫–∞: ${title}`);
      }
      
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
      for (let i = 1; i < handles.length; i++) {
        await this.driver.switchTo().window(handles[i]);
        await this.driver.close();
      }
      
      // –í–æ–∑–≤—Ä–∞—Ç –∫ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
      await this.driver.switchTo().window(handles[0]);
      
      const endTime = Date.now();
      const duration = endTime - startTime;
      
      console.log(`   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}ms`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', error);
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JavaScript –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
   */
  async testJavaScriptExecution(): Promise<void> {
    try {
      console.log('\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è JavaScript...');
      
      // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      await this.driver.get('data:text/html,<html><body><div id="test">Hello World</div></body></html>');
      
      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript
      const result = await this.driver.executeScript(`
        const element = document.getElementById('test');
        return {
          text: element.textContent,
          tagName: element.tagName,
          id: element.id,
          timestamp: Date.now()
        };
      `);
      
      console.log('   –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è JavaScript:');
      console.log(`     –¢–µ–∫—Å—Ç: ${result.text}`);
      console.log(`     –¢–µ–≥: ${result.tagName}`);
      console.log(`     ID: ${result.id}`);
      console.log(`     –í—Ä–µ–º—è: ${new Date(result.timestamp).toISOString()}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è JavaScript:', error);
    }
  }

  /**
   * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
   */
  async testNetworkRequests(): Promise<void> {
    try {
      console.log('\nüåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...');
      
      // –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å API
      await this.driver.get('https://httpbin.org/get');
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const body = await this.driver.findElement(By.tagName('body'));
      const text = await body.getText();
      
      // –ü–∞—Ä—Å–∏–Ω–≥ JSON –æ—Ç–≤–µ—Ç–∞
      try {
        const jsonResponse = JSON.parse(text);
        console.log('   –û—Ç–≤–µ—Ç API –ø–æ–ª—É—á–µ–Ω:');
        console.log(`     URL: ${jsonResponse.url}`);
        console.log(`     User-Agent: ${jsonResponse.headers['User-Agent']}`);
        console.log(`     Accept: ${jsonResponse.headers['Accept']}`);
      } catch (parseError) {
        console.log('   –û—Ç–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º JSON');
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤:', error);
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
   */
  async takeScreenshot(filename: string): Promise<void> {
    try {
      const screenshot = await this.driver.takeScreenshot();
      const fs = require('fs');
      fs.writeFileSync(filename, screenshot, 'base64');
      console.log(`   ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${filename}`);
    } catch (error) {
      console.error(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ ${filename}:`, error);
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ
   */
  async getBrowserInfo(): Promise<void> {
    try {
      console.log('\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ:');
      
      // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ JavaScript –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
      const info = await this.driver.executeScript(`
        return {
          userAgent: navigator.userAgent,
          language: navigator.language,
          platform: navigator.platform,
          cookieEnabled: navigator.cookieEnabled,
          onLine: navigator.onLine,
          screen: {
            width: screen.width,
            height: screen.height,
            availWidth: screen.availWidth,
            availHeight: screen.availHeight
          },
          window: {
            innerWidth: window.innerWidth,
            innerHeight: window.innerHeight,
            outerWidth: window.outerWidth,
            outerHeight: window.outerHeight
          }
        };
      `);
      
      console.log(`   User-Agent: ${info.userAgent}`);
      console.log(`   –Ø–∑—ã–∫: ${info.language}`);
      console.log(`   –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: ${info.platform}`);
      console.log(`   –†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞: ${info.screen.width}x${info.screen.height}`);
      console.log(`   –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: ${info.window.innerWidth}x${info.window.innerHeight}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ:', error);
    }
  }

  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  async closeBrowser(): Promise<void> {
    try {
      if (this.driver) {
        await this.driver.quit();
        console.log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞:', error);
      throw error;
    }
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
   */
  async run(): Promise<void> {
    try {
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞ Selenium –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
      await this.initializeDriver();
      
      // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ
      await this.getBrowserInfo();
      
      // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ JavaScript
      await this.testJavaScriptExecution();
      
      // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      await this.testNetworkRequests();
      
      // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-—Å–∞–π—Ç–æ–≤
      await this.testWebsites();
      
      // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      await this.testPerformance();
      
      console.log('\n‚úÖ –ü—Ä–∏–º–µ—Ä Selenium –≤ –±–µ–∑–≥–æ–ª–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞:', error);
    } finally {
      // –ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
      await this.closeBrowser();
    }
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–∞
if (require.main === module) {
  const example = new SeleniumHeadlessExample();
  example.run().catch(console.error);
}

export default SeleniumHeadlessExample;