/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π FingerprintJS
 */

import { 
  load, 
  clearHashCache, 
  getHashCacheStats,
  parallelWithLimit,
  benchmark,
  measureTime,
  profileMemory
} from '@fingerprintjs/fingerprintjs'

async function demonstrateOptimizations() {
  console.log('üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π FingerprintJS\n')

  // 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  console.log('1. –ó–∞–≥—Ä—É–∑–∫–∞ –∞–≥–µ–Ω—Ç–∞ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏...')
  const agent = await load({
    enableCache: true,        // –í–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    cacheTTL: 300000,         // TTL –∫—ç—à–∞ 5 –º–∏–Ω—É—Ç
    delayFallback: 25,        // –£–º–µ–Ω—å—à–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    debug: false              // –û—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–∫—É –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  })

  // 2. –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ - –º–µ–¥–ª–µ–Ω–Ω—ã–π, –Ω–æ —Å–æ–∑–¥–∞–µ—Ç –∫—ç—à
  console.log('\n2. –ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ (—Å–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞)...')
  const firstResult = await measureTime('First call', async () => {
    return await agent.get()
  })
  
  console.log(`Visitor ID: ${firstResult.visitorId}`)
  console.log(`Confidence: ${firstResult.confidence.score}`)

  // 3. –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ - –±—ã—Å—Ç—Ä—ã–π –±–ª–∞–≥–æ–¥–∞—Ä—è –∫—ç—à—É
  console.log('\n3. –í—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫—ç—à–∞)...')
  const secondResult = await measureTime('Second call (cached)', async () => {
    return await agent.get()
  })

  // 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞
  console.log('\n4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ —Ö–µ—à–µ–π...')
  const cacheStats = getHashCacheStats()
  console.log(`Hash cache: ${cacheStats.size}/${cacheStats.maxSize} entries`)

  // 5. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
  console.log('\n5. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏...')
  const items = Array.from({ length: 10 }, (_, i) => `Item ${i}`)
  
  const parallelResults = await measureTime('Parallel processing', async () => {
    return await parallelWithLimit(
      items,
      async (item) => {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        await new Promise(resolve => setTimeout(resolve, Math.random() * 100))
        return `${item} processed`
      },
      3 // –ú–∞–∫—Å–∏–º—É–º 3 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–∏
    )
  })
  
  console.log(`Processed ${parallelResults.length} items in parallel`)

  // 6. –ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  console.log('\n6. –ë–µ–Ω—á–º–∞—Ä–∫ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...')
  const benchmarkResult = await benchmark('Fingerprint generation', async () => {
    return await agent.get()
  }, { 
    iterations: 10,
    memoryTracking: true 
  })
  
  console.log(`Benchmark results:`)
  console.log(`  Average time: ${benchmarkResult.averageTime.toFixed(3)}ms`)
  console.log(`  Min time: ${benchmarkResult.minTime.toFixed(3)}ms`)
  console.log(`  Max time: ${benchmarkResult.maxTime.toFixed(3)}ms`)
  console.log(`  Iterations: ${benchmarkResult.iterations}`)
  if (benchmarkResult.memoryUsage) {
    console.log(`  Memory usage: ${(benchmarkResult.memoryUsage / 1024 / 1024).toFixed(2)}MB`)
  }

  // 7. –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
  console.log('\n7. –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏...')
  await profileMemory('Memory profiling', async () => {
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ç–ø–µ—á–∞—Ç–∫–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–∞–º—è—Ç–∏
    for (let i = 0; i < 5; i++) {
      await agent.get()
    }
  })

  // 8. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
  console.log('\n8. –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞...')
  clearHashCache()
  console.log('Hash cache cleared')
  
  const finalCacheStats = getHashCacheStats()
  console.log(`Final cache size: ${finalCacheStats.size}`)

  console.log('\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
  
  return {
    firstResult,
    secondResult,
    cacheStats,
    parallelResults,
    benchmarkResult
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
async function comparePerformance() {
  console.log('\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...\n')

  // –¢–µ—Å—Ç –±–µ–∑ –∫—ç—à–∞
  const agentWithoutCache = await load({
    enableCache: false,
    delayFallback: 50
  })

  const withoutCacheResult = await benchmark('Without cache', async () => {
    return await agentWithoutCache.get()
  }, { iterations: 5 })

  // –¢–µ—Å—Ç —Å –∫—ç—à–µ–º
  const agentWithCache = await load({
    enableCache: true,
    cacheTTL: 300000,
    delayFallback: 25
  })

  const withCacheResult = await benchmark('With cache', async () => {
    return await agentWithCache.get()
  }, { iterations: 5 })

  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  console.log('Performance comparison:')
  console.log(`Without cache: ${withoutCacheResult.averageTime.toFixed(3)}ms average`)
  console.log(`With cache:    ${withCacheResult.averageTime.toFixed(3)}ms average`)
  
  const improvement = ((withoutCacheResult.averageTime - withCacheResult.averageTime) / withoutCacheResult.averageTime * 100)
  console.log(`Improvement:   ${improvement.toFixed(1)}% faster with cache`)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
async function demonstrateErrorHandling() {
  console.log('\nüõ°Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫...\n')

  try {
    // –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const agent = await load({
      delayFallback: -1, // –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      enableCache: true
    })

    const result = await agent.get()
    console.log('Unexpected success:', result.visitorId)
  } catch (error) {
    console.log('Error handled gracefully:', error.message)
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    await demonstrateOptimizations()
    await comparePerformance()
    await demonstrateErrorHandling()
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error)
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export {
  demonstrateOptimizations,
  comparePerformance,
  demonstrateErrorHandling,
  main
}

// –ó–∞–ø—É—Å–∫, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (typeof window !== 'undefined') {
  // –í –±—Ä–∞—É–∑–µ—Ä–µ
  window.addEventListener('load', () => {
    main().catch(console.error)
  })
} else if (typeof module !== 'undefined' && module.exports) {
  // –í Node.js
  module.exports = { main }
}